setwd("~/GitHub/predict-west-nile-virus")
train.dt <- read.csv(unz(./data/train.csv.zip))
?unz
train.dt <- read.csv(filename = unz(./data/train.csv.zip))
train.dt <- read.table(filename = unz(./data/train.csv.zip))
train.dt <- read.table(unz("./data/train.csv.zip", "./data/train.csv"))
train.dt <- read.table(unz("~/data/train.csv.zip", "~/data/train.csv"))
setwd("~/GitHub/predict-west-nile-virus")
train.dt <- read.table(unz("~/data/train.csv.zip", "~/data/train.csv"))
train.dt <- read.table(unz("/data/train.csv.zip", "/data/train.csv"))
train.dt <- read.table(unz("../data/train.csv.zip", "../data/train.csv"))
train.dt <- read.table(unz(paste(getwd(), "/data/train.csv.zip"),
paste(getwd(), "/data/train.csv"))
?unz)
train.dt <- read.table(unz(paste(getwd(), "/data/train.csv.zip"),
paste(getwd(), "/data/train.csv")))
train.dt <- read.table(unz(paste(getwd(), "/data/train.csv.zip", sep=FALSE),
paste(getwd(), "/data/train.csv", sep=FALSE)))
?paste
train.dt <- read.table(unz(paste(getwd(), "/data/train.csv.zip", sep=""),
paste(getwd(), "/data/train.csv", sep="")))
train.dt <- read.table(unz(paste(getwd(), "/data/train.csv.zip", sep=""),
paste(getwd(), "/data/train.csv", sep="")))
temp <- unzip(paste(getwd(), "/data/train.csv.zip", sep=""))
train.dt <- read.table(temp, sep=",")
temp <- unzip(paste(getwd(), "/data/test.csv.zip", sep=""))
test.dt <- read.table(temp, sep=",")
temp <- unzip(paste(getwd(), "/data/spray.csv.zip", sep=""))
spray.dt <- read.table(temp, sep=",")
temp <- unzip(paste(getwd(), "/data/weather.csv.zip", sep=""))
weather.dt <- read.table(temp, sep=",")
View(train.dt)
?read.table
temp <- unzip(paste(getwd(), "/data/train.csv.zip", sep=""))
train.dt <- read.table(temp, header=TRUE, sep=",")
View(train.dt)
temp <- unzip(paste(getwd(), "/data/test.csv.zip", sep=""))
test.dt <- read.table(temp, header=TRUE, sep=",")
temp <- unzip(paste(getwd(), "/data/spray.csv.zip", sep=""))
spray.dt <- read.table(temp, header=TRUE, sep=",")
temp <- unzip(paste(getwd(), "/data/weather.csv.zip", sep=""))
weather.dt <- read.table(temp, header=TRUE, sep=",")
View(weather.dt)
mapdata <- read.rds(paste(getwd(), "/data/mapdata_copyright_openstreetmap_contributors.rds", sep=""))
mapdata <- readRDS(paste(getwd(), "/data/mapdata_copyright_openstreetmap_contributors.rds", sep=""))
gc()
?gc
rm(temp)
src(train.dt)
srt(traind.dt)
summary(train.dt)
?srt
?src
str(traind.dt)
str(train.dt)
keep <- c(1,3,6,8,9,10,11,12)
train.dt <- train.dt[,keep]
View(train.dt)
keep <- c(1,3,6,8,9,10,11)
test.dt <- test.dt[,keep]
View(test.dt)
temp <- unzip(paste(getwd(), "/data/test.csv.zip", sep=""))
test.dt <- read.table(temp, header=TRUE, sep=",")
View(test.dt)
str(test.dt)
keep <- c(1,2,4,5,7,9,10,11)
test.dt <- test.dt[,keep]
View(test.dt)
View(spray.dt)
View(weather.dt)
print(mapdata)
summary(train.dt$WnvPresent)
table(train.dt$WnmPresent)
table(train.dt$WnvPresent)
pkg <- c("data.table")
for (i in pkg) {
if(!require(i, character.only = TRUE)) install.packages(i, character.only = TRUE)
library(i, character.only = TRUE)
}
library("packrat", lib.loc="~/GitHub/predict-west-nile-virus/packrat/lib/x86_64-w64-mingw32/3.1.2")
detach("package:packrat", unload=TRUE)
detach("package:packrat", unload=TRUE)
library("packrat", lib.loc="~/GitHub/predict-west-nile-virus/packrat/lib/x86_64-w64-mingw32/3.1.2")
pkg <- c("data.table")
for (i in pkg) {
if(!require(i, character.only = TRUE)) install.packages(i, character.only = TRUE)
library(i, character.only = TRUE)
}
if(!require(i, character.only = TRUE)) install.packages(i, character.only = TRUE)
library(data.table)
install.packages("data.table")
library(data.table)
?library
library("data.table", lib.loc="~/GitHub/predict-west-nile-virus/packrat/lib/x86_64-w64-mingw32/3.1.2")
packrat::disable()
library(data.table)
library(data.table)
install.packages("data.table")
library("data.table", lib.loc="~/R/win-library/3.1")
library(data.table)
setwd("~/GitHub/predict-west-nile-virus")
setwd("~/Documents/Projects/predict-west-nile-virus")
source("functions.R") # load functions
temp <- unzip(paste(getwd(), "/data/train.csv.zip", sep=""))
train.dt <- read.table(temp, header=TRUE, sep=",")
temp <- unzip(paste(getwd(), "/data/test.csv.zip", sep=""))
test.dt <- read.table(temp, header=TRUE, sep=",")
temp <- unzip(paste(getwd(), "/data/spray.csv.zip", sep=""))
spray.dt <- read.table(temp, header=TRUE, sep=",")
temp <- unzip(paste(getwd(), "/data/weather.csv.zip", sep=""))
weather.dt <- read.table(temp, header=TRUE, sep=",")
rm(temp) # Remove temp object from memory
mapdata <- readRDS(paste(getwd(), "/data/mapdata_copyright_openstreetmap_contributors.rds", sep=""))
keep <- c(1,3,6,8,9,10,11,12)
train.dt <- train.dt[,keep]
keep <- c(1,2,4,5,7,9,10,11)
test.dt <- test.dt[,keep]
View(train.dt)
library(MASS)
fit.lda1 <- lda(WnvPresent ~ NumMosquitos, data = train.dt)
gensubmission(fit.lda1, test.dt, type = "response")
temp <- unzip(paste(getwd(), "/data/test.csv.zip", sep=""))
test.dt <- read.table(temp, header=TRUE, sep=",")
keep <- c(1,2,4,5,7,9,10,11)
test.dt <- test.dt[,keep]
fit.lda1
summary(fit.lda1)
View(spray.dt)
View(weather.dt)
?glm
plot(weather.dt$Tmax)
plot.ts(weather.dt$Tmax)
str(weather.dt)
str(train.dt)
?merge
train.weather.dt <- merge(train.dt, weather.dt, all.x = TRUE)
View(train.weather.dt)
train.weather.dt <- merge(train.dt, weather.dt, all.y = TRUE)
View(train.weather.dt)
View(weather.dt)
View(train.dt)
train.dt$Date <- as.date(train.dt$Date)
train.dt$Date <- as.Date(train.dt$Date)
test.dt$Date <- as.Date(test.dt$Date)
View(train.dt)
train.dt$Month <- month(train.dt$Date)
test.dt$Month <- month(test.dt$Date)
fit.lda1 <- lda(WnvPresent ~ Latitude+Longitude+Month, data = train.dt)
gensubmission(fit.lda1, test.dt, type = "response")
virus <- predict(fit.lda1, test.dt, "response")
virus <- predict(fit.lda1, test.dt, response)
virus <- predict(fit.lda1, test.dt)
sub.dt <- cbind.data.frame(Id = newdata$Id, WnvPresent = virus)
write.csv(sub.dt, file = "submission.csv", row.names = FALSE, quote = FALSE)
sub.dt <- cbind.data.frame(Id = newdata$Id, WnvPresent = virus)
sub.dt <- cbind.data.frame(Id = test.dt$Id, WnvPresent = virus)
write.csv(sub.dt, file = "submission.csv", row.names = FALSE, quote = FALSE)
names(virus)
virus <- predict(fit.lda1, test.dt)$class
sub.dt <- cbind.data.frame(Id = test.dt$Id, WnvPresent = virus)
write.csv(sub.dt, file = "submission.csv", row.names = FALSE, quote = FALSE)
fit.lda2 <- lda(WnvPresent ~ Latitude+Longitude+Month+Species, data = train.dt)
virus <- predict(fit.lda2, test.dt)$class
sub.dt <- cbind.data.frame(Id = test.dt$Id, WnvPresent = virus)
write.csv(sub.dt, file = "submission.csv", row.names = FALSE, quote = FALSE)
fit.lda2
View(weather.dt)
tail(weather.dt)
fulltrain.dt <- merge(train.dt, weather.dt[Station == 1], all.x = TRUE)
fulltrain.dt <- merge(train.dt, weather.dt[Station == 1, ], all.x = TRUE)
fulltrain.dt <- merge(train.dt, weather.dt[which(Station == 1), ], all.x = TRUE)
weather.1 <- weather.dt(which(Station == 1), )
weather.1 <- weather.dt[which(Station == 1), ]
weather.1 <- weather.dt[which(weather.dt$Station == 1), ]
fulltrain.dt <- merge(train.dt, weather.1, all.x = TRUE)
fulltest.dt <- merge(test.dt, weather.1, all.x = TRUE)
library(caret)
set.seed(123)
?train
fit.lda3 <- train(WnvPresent ~ ., data = fulltrain.dt, method = "lda")
View(fulltrain.dt)
weather.dt$Date <- as.Date(weather.dt$Date)
weather.1 <- weather.dt[which(weather.dt$Station == 1), ]
fulltrain.dt <- merge(train.dt, weather.1, all.x = TRUE)
View(fulltest.dt)
View(fulltrain.dt)
fulltest.dt <- merge(test.dt, weather.1, all.x = TRUE)
set.seed(123)
fit.lda3 <- train(WnvPresent ~ ., data = fulltrain.dt, method = "lda")
View(fulltrain.dt)
fit.lda3 <- lda(WnvPresent ~ Latitude+Longitude+Month+Species+TMax, data = train.dt)
fit.lda3 <- lda(WnvPresent ~ Latitude+Longitude+Month+Species+Tmax, data = train.dt)
fit.lda3 <- lda(WnvPresent ~ Latitude+Longitude+Month+Species+TMax, data = fulltrain.dt)
fit.lda3 <- lda(WnvPresent ~ Latitude+Longitude+Month+Species+Tmax, data = fulltrain.dt)
virus <- predict(fit.lda3, fulltest.dt)$class
sub.dt <- cbind.data.frame(Id = test.dt$Id, WnvPresent = virus)
write.csv(sub.dt, file = "submission.csv", row.names = FALSE, quote = FALSE)
set.seed(123)
fit.rf4 <- train(WnvPresent ~., data = fulltrain.dt, method = "rf")
